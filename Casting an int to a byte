


public class Example {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		  //initial values

	       int i = 200;

	 

	            //cast to a short

	short s = (short)i;

	System.out.println(s);

	   
	//cast to a double

	double d = (double)i;

	System.out.println(d);
      
	
	//cast to a byte

	byte b = (byte)i;

	System.out.println(b);
	
	
	}

}


// note error will occur due to the amount being higher than the bit can handle.
// will result in -56
// 200 as a 32-bit binary number is represented as:
// 0000 0000 0000 0000     0000 0000 1100 1000
//  convert this number to a byte (which is an 8-bit type), we must truncate the extra bits. 
// This leaves us with: 1100 1000.
// A byte follows two’s complement numbering system, thus the leading 1 indicates a negative number.
// To find out what number this is we must find the two’s complement by inverting the bits and adding 1 to the number.
// Inverting the bits gives us: 0011 0111.
// Adding one gives us: 0011 1000.
// This value represents (32 + 16 + 8 or 56). Thus, our number 1100 1000 represents -56.
